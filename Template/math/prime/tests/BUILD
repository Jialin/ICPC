load("@rules_cc//cc:defs.bzl", "cc_test")

cc_test(
    name = "divisor_test",
    srcs = ["divisor_test.cpp"],
    deps = [
        "//math/prime:divisor",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "divisor32_test",
    srcs = ["divisor32_test.cpp"],
    deps = [
        "//math/prime:divisor32",
        "//math/prime:prime_generator",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "divisor64_test",
    srcs = ["divisor64_test.cpp"],
    deps = [
        "//math/prime:divisor64",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "factorize_test",
    srcs = ["factorize_test.cpp"],
    deps = [
        "//math/prime:factorize",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "factorize_use_primes_test",
    srcs = ["factorize_use_primes_test.cpp"],
    deps = [
        "//math/prime:factorize_use_primes",
        "//math/prime:prime_generator",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "factorize32_test",
    srcs = ["factorize32_test.cpp"],
    deps = [
        "//math/prime:factorize32",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "factorize64_test",
    srcs = ["factorize64_test.cpp"],
    deps = [
        "//math/prime:factorize64",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "factorize128_test",
    srcs = ["factorize128_test.cpp"],
    deps = [
        "//math/prime:factorize128",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "miller_rabin32_test",
    srcs = ["miller_rabin32_test.cpp"],
    deps = [
        "//math/prime:miller_rabin32",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "miller_rabin64_test",
    srcs = ["miller_rabin64_test.cpp"],
    deps = [
        "//math/prime:miller_rabin64",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "miller_rabin128_test",
    srcs = ["miller_rabin128_test.cpp"],
    deps = [
        "//math/prime:miller_rabin128",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "min_prime_tagger_test",
    srcs = ["min_prime_tagger_test.cpp"],
    deps = [
        "//math/prime:min_prime_tagger",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "phi_all_test",
    srcs = ["phi_all_test.cpp"],
    deps = [
        "//math/prime:phi_all",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "phi_inv32_test",
    srcs = ["phi_inv32_test.cpp"],
    deps = [
        "//math/prime:phi_inv32",
        "//math/prime:prime_generator",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "phi_inv64_test",
    srcs = ["phi_inv64_test.cpp"],
    deps = [
        "//math/prime:phi_inv64",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "phi32_test",
    srcs = ["phi32_test.cpp"],
    deps = [
        "//math/prime:phi32",
        "//math/prime:prime_iterator",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "prime_checker_test",
    srcs = ["prime_checker_test.cpp"],
    deps = [
        "//math/prime:prime_checker",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "prime_generator_test",
    srcs = ["prime_generator_test.cpp"],
    deps = [
        "//math/prime:prime_generator",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "prime_iterator_test",
    srcs = ["prime_iterator_test.cpp"],
    deps = [
        "//math/prime:prime_iterator",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "rho32_test",
    srcs = ["rho32_test.cpp"],
    deps = [
        "//math/prime:rho32",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "rho64_test",
    srcs = ["rho64_test.cpp"],
    deps = [
        "//math/prime:rho64",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "rho128_test",
    srcs = ["rho128_test.cpp"],
    deps = [
        "//math/prime:rho128",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_test(
    name = "segmented_prime_iterator_test",
    srcs = ["segmented_prime_iterator_test.cpp"],
    deps = [
        "//math/prime:segmented_prime_iterator",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)
